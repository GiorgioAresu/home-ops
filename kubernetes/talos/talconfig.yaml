---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: &clusterName home-ops

endpoint: https://10.17.1.8:6443

# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.10.3
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.33.1

additionalApiServerCertSans: &sans
  - &talosControlplaneVip 10.17.1.8
  - 127.0.0.1 # KubePrism
additionalMachineCertSans: *sans

# Disable built-in Flannel to use Cilium
cniConfig:
  name: none

nodes:
  - hostname: kube-bmax-01.aresu.eu
    ipAddress: 10.17.1.34
    installDiskSelector:
      model: UDSS UD2CS1HT100 # M.2 SATA
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: 00:e0:4c:2e:36:08
        dhcp: true
        vip:
          ip: *talosControlplaneVip
    nodeLabels:
      node.kubernetes.io/virtual: "false"
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/i915             # Intel iGPU
            - siderolabs/intel-ucode      # Intel
            - siderolabs/iscsi-tools      # Longhorn
            - siderolabs/mei              # Intel
            - siderolabs/util-linux-tools # Longhorn
    volumes:
      - name: EPHEMERAL
        provisioning:
          diskSelector:
            match: system_disk
          maxSize: 50GB
          grow: false
    userVolumes:
      - name: longhorn
        provisioning:
          diskSelector:
             match: system_disk
          maxSize: 400GiB

  - hostname: kube-nuc-01.aresu.eu
    ipAddress: 10.17.1.38
    installDiskSelector:
      # model: KINGSTON SMS200S
      model: KINGSTON SUV500M # MSATA 200GB
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: 68:5b:35:a1:01:ca
        dhcp: true
        vip:
          ip: *talosControlplaneVip
    nodeLabels:
      node.kubernetes.io/virtual: "false"
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            # - siderolabs/i915           # Intel iGPU - Too old to be useful
            - siderolabs/intel-ucode      # Intel
            - siderolabs/iscsi-tools      # Longhorn
            - siderolabs/mei              # Intel
            - siderolabs/util-linux-tools # Longhorn
    volumes:
      - name: EPHEMERAL
        provisioning:
          diskSelector:
            match: system_disk
          maxSize: 50GB
          grow: false
    userVolumes:
      - name: longhorn
        provisioning:
          diskSelector:
             match: system_disk
          maxSize: 150GiB

  - hostname: kube-proxmox-01.aresu.eu
    ipAddress: 10.17.1.36
    installDisk: /dev/sda
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: bc:24:11:41:5f:39
        dhcp: true
        vip:
          ip: *talosControlplaneVip
    nodeLabels:
      node.kubernetes.io/virtual: "true"
    schematic: &pve_schematic
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/iscsi-tools      # Longhorn
            - siderolabs/qemu-guest-agent
            - siderolabs/util-linux-tools # Longhorn
    userVolumes:
      - name: longhorn
        provisioning:
          diskSelector:
            match: "!system_disk"
          minSize: 50GiB
          grow: true

controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: home
    topology.kubernetes.io/zone: m

  schematic:
    customization:
      extraKernelArgs:
        - -selinux                             # Less security, more speed
        - apparmor=0                           # Less security, more speed
        - i915.enable_guc=3                    # Meteor Lake CPU / iGPU
        - init_on_alloc=0                      # Less security, more speed
        - init_on_free=0                       # Less security, more speed
        - intel_iommu=on                       # PCI Passthrough
        - iommu=pt                             # PCI Passthrough
        - mitigations=off                      # Less security, more speed
        - net.ifnames=1                        # Enable predictable NIC naming
        - security=none                        # Less security, more speed
        - sysctl.kernel.kexec_load_disabled=1  # Meteor Lake CPU / iGPU
        - talos.auditd.disabled=1              # Less security, more speed

  patches:
    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Enable host dns
    - |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Mount openebs-hostpath in kubelet
    - |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options:
                - rbind
                - rshared
                - rw

    # Configure kubelet
    - |-
      machine:
        kubelet:
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.17.1.0/24

    # Enable MutatingAdmissionPolicy
    - |-
      cluster:
        apiServer:
          extraArgs:
            runtime-config: admissionregistration.k8s.io/v1alpha1=true
            feature-gates: MutatingAdmissionPolicy=true

    # Configure cluster
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        coreDNS:
            disabled: true
        proxy:
          disabled: true
        scheduler:
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # Configure etcd
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.17.1.0/24

    # Configure NFS mount options
    - |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nconnect=16

    # Configure static host entries
    - |-
      machine:
        network:
          extraHostEntries:
            - ip: 10.17.1.8
              aliases:
                - k8s.aresu.eu

    # Configure custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_instances: 8192    # Watchdog
          fs.inotify.max_user_watches: 1048576   # Watchdog
          net.core.default_qdisc: fq             # 10Gb/s
          net.core.rmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
          net.core.wmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
          net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
          net.ipv4.tcp_fastopen: 3               # Send and accept data in the opening SYN packet
          net.ipv4.tcp_mtu_probing: 1            # 10Gb/s | Jumbo frames
          net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
          net.ipv4.tcp_window_scaling: 1         # 10Gb/s
          net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
          vm.nr_hugepages: 1024                  # PostgreSQL
          user.max_user_namespaces: 11255        # Goes directly against hardcoded defaults, but solved the "failed to start noop process for unshare: fork/exec /proc/self/exe: no space left on device"

    # Configure udev rules
    - |-
      machine:
        udev:
          rules:
            # Intel GPU
            - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - actions-runner-system
              - system-upgrade

    # Longhorn Pod Security (we're disabling it above, but...)
    - |-
      cluster:
        apiServer:
          admissionControl:
            - name: PodSecurity
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1beta1
                kind: PodSecurityConfiguration
                exemptions:
                  namespaces:
                    - longhorn
