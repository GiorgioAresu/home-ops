---
# yaml-language-server: $schema=https://k8s-schemas.bjw-s.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: &imageRepo ghcr.io/blakeblackshear/frigate
              tag: &imageTag 0.15.1@sha256:c4e02d2c511847eebbda8e0e370b41c78e7b51247353de79340e06c3e95f11be
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              privileged: true # Required for intel_gpu_top to work
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: "1"
                memory: 3Gi
        initContainers:
          copyconfig:
            image:
              repository: *imageRepo
              tag: *imageTag
            command: ["cp"]
            args: ["-v", "/tmp/config.yml", "/config/config.yaml"]

    defaultPodOptions:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: app.kubernetes.io/name
      #               operator: In
      #               values: ["plex"]
      #         topologyKey: kubernetes.io/hostname
      nodeSelector:
        # google.feature.node.kubernetes.io/coral: "true"
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        ports:
          http:
            port: *port
          rtsp:
            port: 8554

    ingress:
      app:
        className: internal-nginx
        hosts:
          - host: "{{ .Release.Name }}.aresu.eu"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: frigate
        globalMounts:
          - path: /config
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /tmp/config.yml # Let the initContainer copy it
            subPath: config.yml
            readOnly: true
      tmpfs:
        type: emptyDir
        medium: Memory
        sizeLimit: 256Mi
        advancedMounts:
          frigate:
            app:
              - path: /dev/shm
                subPath: shm
      media:
        type: nfs
        server: ${TRUENAS_ADDR}
        path: /mnt/tank/media/Frigate
        globalMounts:
          - path: /media/frigate
