---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: &imageRepo ghcr.io/blakeblackshear/frigate
              tag: &imageTag 0.15.0@sha256:dc77295ccc5a7258510ab6b1d9d5b7a339027305e2d29224338534febc4d1e89
            env:
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            # securityContext:
            #   privileged: true
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: "1"
                memory: 1Gi
        initContainers:
          copyconfig:
            image:
              repository: *imageRepo
              tag: *imageTag
            command: [ "cp" ]
            args: [ "-v", "/tmp/config.yml", "/config/config.yaml" ]
    defaultPodOptions:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: app.kubernetes.io/name
      #               operator: In
      #               values: ["plex"]
      #         topologyKey: kubernetes.io/hostname
      nodeSelector:
        # google.feature.node.kubernetes.io/coral: "true"
        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: frigate
        ports:
          http:
            port: *port
          rtsp:
            port: 8554
    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: frigate
        globalMounts:
          - path: /config
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /tmp/config.yml # Let the initContainer copy it
            subPath: config.yml
            readOnly: true
      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 256Mi
        globalMounts:
          - path: /dev/shm\
      media:
        type: nfs
        server: ${TRUENAS_ADDR}
        path: /mnt/tank/media/frigate
        globalMounts:
          - path: /media
