---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
spec:
  chartRef:
    kind: OCIRepository
    name: frigate
  interval: 30m
  values:
    controllers:
      frigate:
        # pod:
        #   resourceClaims:
        #     - name: gpu
        #       resourceClaimTemplateName: frigate-gpu
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: &imageRepo ghcr.io/blakeblackshear/frigate
              tag: &imageTag 0.16.1@sha256:cb6624b9075f76ece626139eedca7e728cab1456a5f8c351afbf877320826bc1
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &portHttp 5000
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            resources:
              # claims:
              #   - name: gpu
              requests:
                cpu: 100m
              limits:
                memory: 3Gi
        initContainers:
          copyconfig:
            image:
              repository: *imageRepo
              tag: *imageTag
            command: ["cp"]
            args: ["-v", "/tmp/config.yml", "/config/config.yaml"]
    service:
      frigate:
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_FRIGATE_ADDR}
        ports:
          http:
            appProtocol: kubernetes.io/wss
            port: *portHttp
          go2rtc:
            primary: true
            port: &portGo2rtc 1984
          rtsp:
            port: 8554
          webrtc-tcp:
            port: 8555
            protocol: TCP
          webrtc-udp:
            port: 8555
            protocol: UDP
    persistence:
      config:
        existingClaim: frigate
        globalMounts:
          - path: /config
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /tmp/config.yml # Let the initContainer copy it
            subPath: config.yml
            readOnly: true
      tmpfs:
        type: emptyDir
        medium: Memory
        sizeLimit: 256Mi
        advancedMounts:
          frigate:
            app:
              - path: /dev/shm
                subPath: shm
      media:
        type: nfs
        server: truenas.aresu.eu
        path: /mnt/tank/media/Frigate
        globalMounts:
          - path: /media/frigate
    route:
      frigate:
        hostnames:
          - frigate.aresu.eu
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: frigate
                port: *portHttp
      go2rtc:
        hostnames:
          - frigate-go2rtc.aresu.eu
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: frigate
                port: *portGo2rtc
