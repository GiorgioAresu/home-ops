---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: otbr
spec:
  interval: 30m
  chart:
    spec:
      chart: otbr
      version: 0.1.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: derwitt
  values:
    # -- The mount path for the thread receiver
    rcpMountPath: /dev/ttyACM0?uart-baudrate=115200
    # -- The physical network interface to use for routing
    backboneInterface: enp2s0

    # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
    service:
      # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
      type: ClusterIP
      port: 8888

    # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
    ingress:
      enabled: true
      className: internal-nginx
      annotations:
        {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: otbr.aresu.eu
          paths:
            - path: /
              pathType: ImplementationSpecific

    resources:
      limits:
        cpu: 500m
        memory: 128Mi
        squat.ai/thread: 1
      requests:
        cpu: 100m
        memory: 128Mi

    # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
    livenessProbe:
      httpGet:
        path: /
        port: http
    readinessProbe:
      httpGet:
        path: /
        port: http

    # Additional volumes on the output Deployment definition.
    volumes:
      - name: tun
        hostPath:
          path: /dev/net/tun

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
      - name: tun
        mountPath: /dev/net/tun

    nodeSelector: {}

    tolerations: []

    affinity: {}
